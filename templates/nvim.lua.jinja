vim.api.nvim_set_hl(0, 'Normal', { fg = '{{ fg.normal }}' })
vim.api.nvim_set_hl(0, 'NormalNC', { bg = '{{ bg.inactive }}' })
vim.api.nvim_set_hl(0, 'MoreMsg', { link = 'Normal' })
vim.api.nvim_set_hl(0, 'ModeMsg', { link = 'Normal' })
vim.api.nvim_set_hl(0, 'Question', { link = 'Normal' })
vim.api.nvim_set_hl(0, 'QuickFixLine', { link = 'Normal' })
vim.api.nvim_set_hl(0, 'Underlined', { underline = true })

vim.api.nvim_set_hl(0, 'StatusLine', { fg = '{{ fg.status }}' })
vim.api.nvim_set_hl(0, 'StatusLineNC', { fg = '{{ fg.status }}', bg = '{{ bg.inactive }}' })
vim.api.nvim_set_hl(0, 'WinBar', { link = 'StatusLine' })
vim.api.nvim_set_hl(0, 'WinBarNC', { link = 'StatusLineNC' })

vim.api.nvim_set_hl(0, 'CursorLine', { bg = '{{ bg.cursorline }}' })
vim.api.nvim_set_hl(0, 'CursorLineNr', { fg = '{{ fg.status }}', bg = '{{ bg.cursorline }}' })
vim.api.nvim_set_hl(0, 'ColorColumn', { link = 'CursorLine' })

vim.api.nvim_set_hl(0, 'Visual', { bg = '{{ bg.select }}' })

vim.api.nvim_set_hl(0, 'MatchParen', { bold = true })

vim.api.nvim_set_hl(0, 'Keyword', { fg = '{{ fg.keyword }}', bold = true })
vim.api.nvim_set_hl(0, 'Conditional', { link = 'Keyword' })
vim.api.nvim_set_hl(0, 'Repeat', { link = 'Keyword' })

vim.api.nvim_set_hl(0, 'Type', { fg = '{{ fg.type }}' })
vim.api.nvim_set_hl(0, 'Identifier', { fg = '{{ fg.identifier }}' })
vim.api.nvim_set_hl(0, 'Function', { link = 'Identifier' })
vim.api.nvim_set_hl(0, 'Statement', { link = 'Identifier' })
vim.api.nvim_set_hl(0, 'Special', { fg = '{{ fg.identifier }}', bold = true })
vim.api.nvim_set_hl(0, '@variable', { link = 'Identifier' })
vim.api.nvim_set_hl(0, 'Constant', { italic = true, fg = '{{ fg.constant }}' })
vim.api.nvim_set_hl(0, 'String', { link = 'Constant' })
vim.api.nvim_set_hl(0, 'Tag', { link = 'Constant' })
vim.api.nvim_set_hl(0, 'Label', { link = 'Constant' })
vim.api.nvim_set_hl(0, 'PreProc', { fg = '{{ fg.preproc }}' })
vim.api.nvim_set_hl(0, 'Comment', { italic = true, fg = '{{ fg.comment }}' })
vim.api.nvim_set_hl(0, 'Title', { fg = '{{ fg.type }}' })
vim.api.nvim_set_hl(0, 'Directory', { bold = true })

vim.api.nvim_set_hl(0, 'NonText', { fg = '{{ fg.virtual }}' })
vim.api.nvim_set_hl(0, 'LineNr', { link = 'NonText' })
vim.api.nvim_set_hl(0, 'SignColumn', { link = 'NonText' })
vim.api.nvim_set_hl(0, 'SpecialKey', { link = 'NonText' })
vim.api.nvim_set_hl(0, 'Folded', { link = 'NonText' })
vim.api.nvim_set_hl(0, 'Conceal', { link = 'NonText' })

vim.api.nvim_set_hl(0, 'Operator', { fg = '{{ fg.operator }}' })
vim.api.nvim_set_hl(0, 'Delimiter', { link = 'Operator' })

vim.api.nvim_set_hl(0, 'Added', { fg = '{{ fg.add[1] }}' })
vim.api.nvim_set_hl(0, 'Removed', { fg = '{{ fg.delete[1] }}' })
vim.api.nvim_set_hl(0, 'Changed', { fg = '{{ fg.change[1] }}' })
vim.api.nvim_set_hl(0, 'DiffAdd', { link = 'Added' })
vim.api.nvim_set_hl(0, 'DiffDelete', { link = 'Removed' })
vim.api.nvim_set_hl(0, 'DiffChange', { link = 'Changed' })
vim.api.nvim_set_hl(0, 'DiffText', { bg = '#201c0d' })

vim.api.nvim_set_hl(0, 'Error', { fg = '{{ fg.error }}' })
vim.api.nvim_set_hl(0, 'DiagnosticError', { link = 'Error' })
vim.api.nvim_set_hl(0, 'DiagnosticUnderlineError', { undercurl = true, sp = '{{ fg.error }}' })
vim.api.nvim_set_hl(0, 'NvimInvalid', { undercurl = true, sp = '{{ fg.error }}' })
vim.api.nvim_set_hl(0, 'ErrorMsg', { link = 'Error' })

vim.api.nvim_set_hl(0, 'Warn', { fg = '{{ fg.warn }}' })
vim.api.nvim_set_hl(0, 'DiagnosticWarn', { link = 'Warn' })
vim.api.nvim_set_hl(0, 'DiagnosticUnderlineWarn', { undercurl = true, sp = '{{ fg.warn }}' })
vim.api.nvim_set_hl(0, 'WarningMsg', { link = 'Warn' })

vim.api.nvim_set_hl(0, 'DiagnosticInfo', { fg = '{{ fg.info }}' })
vim.api.nvim_set_hl(0, 'DiagnosticUnderlineInfo', { undercurl = true, sp = '{{ fg.info }}' })
vim.api.nvim_set_hl(0, 'Todo', { link = 'DiagnosticInfo' })

vim.api.nvim_set_hl(0, 'DiagnosticOk', { fg = '{{ fg.ok }}' })
vim.api.nvim_set_hl(0, 'DiagnosticUnderlineOk', { undercurl = true, sp = '{{ fg.ok }}' })

vim.api.nvim_set_hl(0, 'DiagnosticHint', { fg = '{{ fg.hint }}' })
vim.api.nvim_set_hl(0, 'DiagnosticUnderlineHint', { undercurl = true, sp = '{{ fg.hint }}' })

vim.api.nvim_set_hl(0, 'DiagnosticUnnecessary', { underdotted = true })
vim.api.nvim_set_hl(0, 'DiagnosticDeprecated', { strikethrough = true })

vim.api.nvim_set_hl(0, 'Cursor', { fg = '{{ fg.normal }}', bg = '{{ bg.cursor }}' })
vim.api.nvim_set_hl(0, 'TermCursor', { link = 'Cursor' })

vim.api.nvim_set_hl(0, 'Search', { fg = '{{ fg.normal }}', bg = '{{ bg.search }}' })
vim.api.nvim_set_hl(0, 'IncSearch', { link = 'Search' })
vim.api.nvim_set_hl(0, 'CurSearch', { link = 'Search' })

vim.api.nvim_set_hl(0, 'LspReferenceText', { bg = '{{ bg.highlight }}' })
vim.api.nvim_set_hl(0, 'LspReferenceRead', { link = 'LspReferenceText' })
vim.api.nvim_set_hl(0, 'LspReferenceWrite', { link = 'LspReferenceText' })

vim.api.nvim_set_hl(0, 'SpellBad', { link = 'DiagnosticUnderlineError' })
vim.api.nvim_set_hl(0, 'SpellCap', { link = 'DiagnosticUnderlineWarn' })
vim.api.nvim_set_hl(0, 'SpellRare', { link = 'DiagnosticUnderlineInfo' })
vim.api.nvim_set_hl(0, 'SpellLocal', { link = 'DiagnosticUnderlineWarn' })

vim.api.nvim_set_hl(0, 'FloatTitle', { link = 'FloatBorder' })
vim.api.nvim_set_hl(0, 'LspInfoBorder', { link = 'FloatBorder' })
vim.api.nvim_set_hl(0, 'NormalFloat', { link = 'Normal' })
vim.api.nvim_set_hl(0, 'Pmenu', { link = 'Normal' })
vim.api.nvim_set_hl(0, 'PmenuSel', { bg = '{{ bg.highlight }}' })

vim.api.nvim_set_hl(0, 'GitSignsAdd', { fg = '{{ fg.add[1] }}' })
vim.api.nvim_set_hl(0, 'GitSignsStagedAdd', { fg = '{{ fg.add[0] }}' })
vim.api.nvim_set_hl(0, 'GitSignsStagedAddNr', { link = 'GitSignsStagedAdd' })
vim.api.nvim_set_hl(0, 'GitSignsDelete', { fg = '{{ fg.delete[1] }}' })
vim.api.nvim_set_hl(0, 'GitSignsStagedDelete', { fg = '{{ fg.delete[0] }}' })
vim.api.nvim_set_hl(0, 'GitSignsStagedDeleteNr', { link = 'GitSignsStagedDelete' })
vim.api.nvim_set_hl(0, 'GitSignsChange', { fg = '{{ fg.change[1] }}' })
vim.api.nvim_set_hl(0, 'GitSignsStagedChange', { fg = '{{ fg.change[0] }}' })
vim.api.nvim_set_hl(0, 'GitSignsStagedChangeNr', { link = 'GitSignsStagedChange' })
vim.api.nvim_set_hl(0, 'GitSignsAddInline', { bg = '{{ bg.add[0] }}' })
vim.api.nvim_set_hl(0, 'GitSignsDeleteInline', { bg = '{{ bg.delete[0] }}' })
vim.api.nvim_set_hl(0, 'GitSignsChangeInline', { bg = '{{ bg.change[0] }}' })

vim.api.nvim_set_hl(0, 'GitConflictCurrent', { bg = '{{ bg.current[0] }}' })
vim.api.nvim_set_hl(0, 'GitConflictIncoming', { bg = '{{ bg.incoming[0] }}' })
vim.api.nvim_set_hl(0, 'GitConflictAncestor', { bg = '{{ bg.ancestor[0] }}' })
vim.api.nvim_set_hl(0, 'GitConflictCurrentLabel', { bg = '{{ bg.current[1] }}', bold = true })
vim.api.nvim_set_hl(0, 'GitConflictIncomingLabel', { bg = '{{ bg.incoming[1] }}', bold = true })
vim.api.nvim_set_hl(0, 'GitConflictAncestorLabel', { bg = '{{ bg.ancestor[1] }}', bold = true })

vim.api.nvim_set_hl(0, 'TreesitterContext', { bg = '{{ bg.cursorline }}' })
vim.api.nvim_set_hl(0, 'TreesitterContextLineNumber', { fg = '{{ fg.virtual }}', bg = '{{ bg.cursorline }}' })

vim.api.nvim_set_hl(0, 'TelescopeBorder', { link = 'FloatBorder' })
vim.api.nvim_set_hl(0, 'TelescopeNormal', { bg = '{{ bg.active }}' })
vim.api.nvim_set_hl(0, 'TelescopeSelection', { link = 'CursorLine' })
vim.api.nvim_set_hl(0, 'TelescopeMatching', { link = 'Search' })
